# Test your FastAPI endpoints

### Health Check
GET http://127.0.0.1:8000/health
Accept: application/json

###

### Root endpoint
GET http://127.0.0.1:8000/
Accept: application/json

###

### Register a new user
POST http://127.0.0.1:8000/api/auth/register
Content-Type: application/json

{
  "email": "test@example.com",
  "username": "testuser",
  "full_name": "Test User",
  "password": "password123",
  "role": "student"
}

###

### Login
POST http://127.0.0.1:8000/api/auth/login
Content-Type: application/x-www-form-urlencoded

username=test@example.com&password=password123

###

### Get current user info (requires authentication)
GET http://127.0.0.1:8000/api/auth/me
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Accept: application/json

###

### Get all courses (requires authentication)
GET http://127.0.0.1:8000/api/courses/
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Accept: application/json

###

### Get specific course (requires authentication)
GET http://127.0.0.1:8000/api/courses/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Accept: application/json

###

### Enroll in a course (requires authentication)
POST http://127.0.0.1:8000/api/courses/enroll
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{
  "course_id": 1
}

###

### Get user enrollments (requires authentication)
GET http://127.0.0.1:8000/api/courses/my-enrollments
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Accept: application/json

###

### Unenroll from a course (requires authentication)
DELETE http://127.0.0.1:8000/api/courses/unenroll/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE

###

### Get course announcements (requires authentication)
GET http://127.0.0.1:8000/api/announcements/course/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Accept: application/json

###

### Get specific announcement (requires authentication)
GET http://127.0.0.1:8000/api/announcements/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Accept: application/json

###

### Create announcement (professors only, requires authentication)
POST http://127.0.0.1:8000/api/announcements/
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="title"

Test Announcement
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="content"

This is a test announcement content.
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="course_id"

1
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

### React to announcement (students only, requires authentication)
POST http://127.0.0.1:8000/api/announcements/1/react
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{
  "announcement_id": 1,
  "reaction_type": "like"
}

###

### Remove reaction (requires authentication)
DELETE http://127.0.0.1:8000/api/announcements/1/react
Authorization: Bearer YOUR_JWT_TOKEN_HERE

###

### Get announcement comments (requires authentication)
GET http://127.0.0.1:8000/api/announcements/1/comments
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Accept: application/json

###

### Create comment (students only, requires authentication)
POST http://127.0.0.1:8000/api/announcements/1/comments
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{
  "content": "This is a test comment",
  "announcement_id": 1
}

###

### Update comment (author only, requires authentication)
PUT http://127.0.0.1:8000/api/announcements/comments/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{
  "content": "Updated comment content"
}

###

### Delete comment (author only, requires authentication)
DELETE http://127.0.0.1:8000/api/announcements/comments/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE

###

### Get course materials (requires authentication)
GET http://127.0.0.1:8000/api/materials/course/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Accept: application/json

###

### Get specific material (requires authentication)
GET http://127.0.0.1:8000/api/materials/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Accept: application/json

###

### Upload material (professors only, requires authentication)
POST http://127.0.0.1:8000/api/materials/
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="title"

Test Material
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="description"

This is a test learning material
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="course_id"

1
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="test.txt"
Content-Type: text/plain

< ./test.txt
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

### Download material (requires authentication)
GET http://127.0.0.1:8000/api/materials/download/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE

###

### Delete material (professors only, requires authentication)
DELETE http://127.0.0.1:8000/api/materials/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE

###
